@model Dialog
@{
    Layout = null;
}
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html>
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
    <meta charset="utf-8" />
    <title>SignalR Chat</title>
</head>
<body>
   
    <main class="content">
    <div class="container p-0">

		<h1 class="h3 mb-3">Messages</h1>

		<div class="card">
				<div>
					<div>
									
					<hr class="d-block d-lg-none mt-1 mb-0">
				</div>
				<div class="col-12 col-lg-7 col-xl-12" >
					

					<div class="position-relative">
						<div id="chatroom" class="chat-messages p-4">							

							@foreach(var mes in Model.Messages)
                                {
                                    if(mes.UserSender.Name == ViewBag.senderName)
                                    {
                                        <div class="chat-message-right mb-4">
								            <div>							
									            <div class="text-muted small text-nowrap mt-2">@mes.Time</div>
								            </div>
								                    <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
									                <div class="font-weight-bold mb-1">You</div>
									                @mes.Content
								                </div>
							                </div>
                                    }
                                    else
                                    {
                                        <div class="chat-message-left pb-4">
								            <div>		
									            <div class="text-muted small text-nowrap mt-2">@mes.Time</div>
								            </div>
								                <div class="flex-shrink-1 bg-light rounded py-2 px-3 ml-3">
									            <div class="font-weight-bold mb-1">@mes.UserSender.Name</div>
									            @mes.Content
								            </div>
							            </div>
                                    }
                                }

						</div>
					</div>

					<div class="flex-grow-0 py-3 px-4 border-top">
						<div id="inputForm"  class="input-group">
							<input id="message" type="text" class="form-control" placeholder="Type your message">
							<button id="sendBtn" class="btn btn-primary">Send</button>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</main>
            

    <div id="header"></div><br />
 
  @*  <div id="inputForm">
        <input type="text" id="message" />
        <input type="button" id="sendBtn" value="Отправить" />
    </div>*@

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .build();
 

        var senderUserName = "@(ViewBag.senderName)";
        var dialogId = "@(ViewBag.dialogId)";

        
        // получение сообщения от сервера
        hubConnection.on("Send", function (content, senderName, dialogId) {

            let elem1 = document.createElement("div"); 
            //elem1.classList.add("chat-message-right", "mb-4");
            let elem2 = document.createElement("div");
            elem2.classList.add("flex-shrink-1", "bg-light", "rounded", "py-2", "px-3", "mr-3");
            let elem3 = document.createElement("div");
            elem3.classList.add("font-weight-bold", "mb-1");
            let contentElem = document.createElement("div");
            contentElem.textContent = content

            if(senderUserName == senderName)
                {
                    elem3.textContent = "You";
                    elem1.classList.add("chat-message-right", "mb-4");
                }
            else
                {
                    elem3.textContent = senderName;
                    elem1.classList.add("chat-message-left", "pb-4");
                }

            elem2.appendChild(elem3);
            elem2.appendChild(contentElem);
            elem1.appendChild(elem2);
            document.getElementById("chatroom").appendChild(elem1);       
        });

         //отправка сообщения на сервер
        document.getElementById("sendBtn").addEventListener("click", function (e) {
            let content = document.getElementById("message").value;
            hubConnection.invoke("Send", content, senderUserName, dialogId); 
        });
 
        hubConnection.start();
    </script>
</body>
</html>
